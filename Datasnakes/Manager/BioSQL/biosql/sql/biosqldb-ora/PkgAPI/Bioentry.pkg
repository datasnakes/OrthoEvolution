-- -*-Sql-*- mode (to keep my emacs happy)
--
-- API Package for Bioentry.
--
-- Scaffold auto-generated by gen-api.pl (H.Lapp, 2002).
--
-- $GNF: projects/gi/symgene/src/DB/PkgAPI/Bioentry.pkg,v 1.11 2003/06/12 01:03:39 hlapp Exp $
--

--
-- Copyright 2002-2003 Genomics Institute of the Novartis Research Foundation
-- Copyright 2002-2008 Hilmar Lapp
-- 
--  This file is part of BioSQL.
--
--  BioSQL is free software: you can redistribute it and/or modify it
--  under the terms of the GNU Lesser General Public License as
--  published by the Free Software Foundation, either version 3 of the
--  License, or (at your option) any later version.
--
--  BioSQL is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU Lesser General Public License for more details.
--
--  You should have received a copy of the GNU Lesser General Public License
--  along with BioSQL. If not, see <http://www.gnu.org/licenses/>.
--

CREATE OR REPLACE
PACKAGE Ent IS

	CURSOR Ent_Acc_c (
		Ent_ACCESSION	IN SG_BIOENTRY.ACCESSION%TYPE,
		Ent_VERSION	IN SG_BIOENTRY.VERSION%TYPE,
		Ent_DB_OID	IN SG_BIOENTRY.DB_OID%TYPE)
	RETURN SG_BIOENTRY%ROWTYPE;

	CURSOR Ent_ID_c (
		Ent_DB_OID	IN SG_BIOENTRY.DB_OID%TYPE,
		Ent_IDENTIFIER	IN SG_BIOENTRY.IDENTIFIER%TYPE)
	RETURN SG_BIOENTRY%ROWTYPE;

	FUNCTION get_oid(
		Ent_OID	IN SG_BIOENTRY.OID%TYPE DEFAULT NULL,
		Ent_ACCESSION	IN SG_BIOENTRY.ACCESSION%TYPE,
		Ent_IDENTIFIER	IN SG_BIOENTRY.IDENTIFIER%TYPE DEFAULT NULL,
		Ent_NAME	IN SG_BIOENTRY.NAME%TYPE DEFAULT NULL,
		Ent_DESCRIPTION	IN SG_BIOENTRY.DESCRIPTION%TYPE DEFAULT NULL,
		Ent_VERSION	IN SG_BIOENTRY.VERSION%TYPE DEFAULT NULL,
		Ent_DIVISION	IN SG_BIOENTRY.DIVISION%TYPE DEFAULT NULL,
		DB_OID	IN SG_BIOENTRY.DB_OID%TYPE DEFAULT NULL,
		TAX_OID	IN SG_BIOENTRY.TAX_OID%TYPE DEFAULT NULL,
		Tax_NCBI_TAXON_ID	IN SG_TAXON.NCBI_TAXON_ID%TYPE DEFAULT NULL,
		Tnm_Name	IN SG_TAXON_NAME.NAME%TYPE DEFAULT NULL,
		DB_NAME	IN SG_BIODATABASE.NAME%TYPE DEFAULT NULL,
		DB_ACRONYM	IN SG_BIODATABASE.ACRONYM%TYPE DEFAULT NULL,
		do_DML		IN NUMBER DEFAULT BSStd.DML_NO)
	RETURN SG_BIOENTRY.OID%TYPE;

	FUNCTION do_insert(
		ACCESSION	IN SG_BIOENTRY.ACCESSION%TYPE,
		IDENTIFIER	IN SG_BIOENTRY.IDENTIFIER%TYPE,
		NAME	IN SG_BIOENTRY.NAME%TYPE,
		DESCRIPTION	IN SG_BIOENTRY.DESCRIPTION%TYPE,
		VERSION	IN SG_BIOENTRY.VERSION%TYPE,
		DIVISION	IN SG_BIOENTRY.DIVISION%TYPE,
		DB_OID	IN SG_BIOENTRY.DB_OID%TYPE,
		TAX_OID	IN SG_BIOENTRY.TAX_OID%TYPE)
	RETURN SG_BIOENTRY.OID%TYPE;

	PROCEDURE do_update(
		Ent_OID	IN SG_BIOENTRY.OID%TYPE,
		Ent_ACCESSION	IN SG_BIOENTRY.ACCESSION%TYPE,
		Ent_IDENTIFIER	IN SG_BIOENTRY.IDENTIFIER%TYPE,
		Ent_NAME	IN SG_BIOENTRY.NAME%TYPE,
		Ent_DESCRIPTION	IN SG_BIOENTRY.DESCRIPTION%TYPE,
		Ent_VERSION	IN SG_BIOENTRY.VERSION%TYPE,
		Ent_DIVISION	IN SG_BIOENTRY.DIVISION%TYPE,
		Ent_DB_OID	IN SG_BIOENTRY.DB_OID%TYPE,
		Ent_TAX_OID	IN SG_BIOENTRY.TAX_OID%TYPE);

END Ent;
/

