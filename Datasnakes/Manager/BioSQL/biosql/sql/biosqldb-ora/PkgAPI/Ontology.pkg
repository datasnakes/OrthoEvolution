-- -*-Sql-*- mode (to keep my emacs happy)
--
-- API Package for Ontology.
--
-- Scaffold auto-generated by gen-api.pl. gen-api.pl is
-- Copyright 2002-2003 Genomics Institute of the Novartis Research Foundation
-- Copyright 2002-2008 Hilmar Lapp
-- 
--  This file is part of BioSQL.
--
--  BioSQL is free software: you can redistribute it and/or modify it
--  under the terms of the GNU Lesser General Public License as
--  published by the Free Software Foundation, either version 3 of the
--  License, or (at your option) any later version.
--
--  BioSQL is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU Lesser General Public License for more details.
--
--  You should have received a copy of the GNU Lesser General Public License
--  along with BioSQL. If not, see <http://www.gnu.org/licenses/>.
--

CREATE OR REPLACE
PACKAGE Ont IS

	CURSOR Ont_c (
		Ont_NAME	IN SG_ONTOLOGY.NAME%TYPE)
	RETURN SG_ONTOLOGY%ROWTYPE;

	FUNCTION get_oid(
		Ont_OID	IN SG_ONTOLOGY.OID%TYPE DEFAULT NULL,
		Ont_NAME	IN SG_ONTOLOGY.NAME%TYPE,
		Ont_DEFINITION	IN SG_ONTOLOGY.DEFINITION%TYPE DEFAULT NULL,
		do_DML		IN NUMBER DEFAULT BSStd.DML_NO)
	RETURN SG_ONTOLOGY.OID%TYPE;

	FUNCTION do_insert(
		NAME	IN SG_ONTOLOGY.NAME%TYPE,
		DEFINITION	IN SG_ONTOLOGY.DEFINITION%TYPE)
	RETURN SG_ONTOLOGY.OID%TYPE;

	PROCEDURE do_update(
		Ont_OID	IN SG_ONTOLOGY.OID%TYPE,
		Ont_NAME	IN SG_ONTOLOGY.NAME%TYPE,
		Ont_DEFINITION	IN SG_ONTOLOGY.DEFINITION%TYPE);

	--
	-- Computes the transitive closure table for the given ontology by
	-- populating the Term_Path table with it.
	--
	-- The ontology may be specified by name or by OID. If trunc_existing
	-- is set to any non-NULL value (which is the default), the existing
	-- transitive closure, if any, will be deleted first.
	-- 
        -- All other parameters can be used to aid preparation for the
	-- transitive closure computation. The computation relies on each
	-- predicate in an ontology being related to itself, which is commonly
	-- referred to as identity relationship. Also, if there are valid
	-- paths in the ontology with mixed predicates, the algorithm expects
	-- a relationship between the two different predicates and a common
	-- ancestor (analogous to the superclass of two different classes).
	--        
        -- Id_* parameters: The predicate for the identity of a predicate
	-- 		with itself. If provided, the method will create
        --              relationships for all predicates in the ontology,
	--		where subject and object are the predicate of the
	--		ontology, the predicate is the supplied identity
	--		predicate, and the ontology is the ontology referenced
	--		by the supplied term.
        --
        --              If this is not provided, the aforementioned
        --              relationships should be present in an ontology in the
	--      	database already. Otherwise the transitive closure
	--		will be incomplete.
	--
	--		If the term exists and is specified by OID, the
	--  		other attributes need not be specified.
	--
        -- Basepred* parameters: The common ancestor predicate for all
	-- 		predicates in the ontology. If this is specified, the
	--		method will create relationships between all predicates
	--		in the ontology and the ancestor predicate, where the
	--		ancestor predicate is the object, the predicate is
	--		the one specified by the Subclass* parameters (or the
	--		default term 'subclasses'), and the ontology is the
        --              ontology referenced by the ancestor predicate.
	--
	--              This ancestor predicate is often also referred to as
	--		the 'base' class in an object-oriented view.
        --
        --              If this is not provided, the aforementioned
	--		relationships should be present in an ontology in the
	--		database already, unless the ontology over which to
	-- 		compute the transitive closure has only one predicate,
	--		or paths over mixed predicates are void. 
	--        
	--		If the term exists and is specified by OID, the
	--  		other attributes need not be specified.
	--
        -- Subclass* parameters: The predicate for the relationship between
	--              predicate A and predicate B if predicate A can be
	--		considered to subclass (or imply) predicate B.
        --
	--		If the term exists and is specified by OID, the
	--  		other attributes need not be specified.
	--
	PROCEDURE compute_transitive_closure(
		Ont_Oid		IN SG_ONTOLOGY.OID%TYPE DEFAULT NULL,
		Ont_Name	IN SG_ONTOLOGY.NAME%TYPE DEFAULT NULL,
		Id_Trm_Oid	IN SG_TERM.OID%TYPE DEFAULT NULL,
		Id_Trm_Name	IN SG_TERM.NAME%TYPE DEFAULT NULL,
		Id_Trm_Identifier	IN SG_TERM.IDENTIFIER%TYPE DEFAULT NULL,
		Id_Ont_Oid	IN SG_ONTOLOGY.OID%TYPE DEFAULT NULL,
		Id_Ont_Name	IN SG_ONTOLOGY.NAME%TYPE DEFAULT NULL,
		Subclass_Trm_Oid	IN SG_TERM.OID%TYPE DEFAULT NULL,
		Subclass_Trm_Name	IN SG_TERM.NAME%TYPE DEFAULT NULL,
		Subclass_Trm_Identifier	IN SG_TERM.IDENTIFIER%TYPE DEFAULT NULL,
		Subclass_Ont_Oid	IN SG_ONTOLOGY.OID%TYPE DEFAULT NULL,
		Subclass_Ont_Name	IN SG_ONTOLOGY.NAME%TYPE DEFAULT NULL,
		Basepred_Trm_Oid	IN SG_TERM.OID%TYPE DEFAULT NULL,
		Basepred_Trm_Name	IN SG_TERM.NAME%TYPE DEFAULT NULL,
		Basepred_Trm_Identifier	IN SG_TERM.IDENTIFIER%TYPE DEFAULT NULL,
		Basepred_Ont_Oid	IN SG_ONTOLOGY.OID%TYPE DEFAULT NULL,
		Basepred_Ont_Name	IN SG_ONTOLOGY.NAME%TYPE DEFAULT NULL,
		trunc_existing	IN VARCHAR2 DEFAULT 'Y');

END Ont;
/

