-- -*-Sql-*- mode (to keep my emacs happy)
--
-- API Package for Bioentry_Assoc.
--
-- Scaffold auto-generated by gen-api.pl (H.Lapp, 2002).
--
-- $GNF: projects/gi/symgene/src/DB/PkgAPI/Bioentry_Assoc.pkg,v 1.8 2003/06/11 10:03:20 hlapp Exp $
--

--
-- Copyright 2002-2003 Genomics Institute of the Novartis Research Foundation
-- Copyright 2002-2008 Hilmar Lapp
-- 
--  This file is part of BioSQL.
--
--  BioSQL is free software: you can redistribute it and/or modify it
--  under the terms of the GNU Lesser General Public License as
--  published by the Free Software Foundation, either version 3 of the
--  License, or (at your option) any later version.
--
--  BioSQL is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU Lesser General Public License for more details.
--
--  You should have received a copy of the GNU Lesser General Public License
--  along with BioSQL. If not, see <http://www.gnu.org/licenses/>.
--

CREATE OR REPLACE
PACKAGE EntA IS

	CURSOR EntA_c (
		EntA_SUBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.SUBJ_ENT_OID%TYPE,
		EntA_OBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.OBJ_ENT_OID%TYPE,
		EntA_TRM_OID	IN SG_BIOENTRY_ASSOC.TRM_OID%TYPE)
	RETURN SG_BIOENTRY_ASSOC%ROWTYPE;

	FUNCTION get_oid(
		EntA_OID	IN SG_BIOENTRY_ASSOC.OID%TYPE DEFAULT NULL,
		TRM_OID	IN SG_BIOENTRY_ASSOC.TRM_OID%TYPE,
		OBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.OBJ_ENT_OID%TYPE,
		SUBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.SUBJ_ENT_OID%TYPE,
		EntA_RANK	IN SG_BIOENTRY_ASSOC.RANK%TYPE DEFAULT NULL,
		Trm_NAME	IN SG_TERM.NAME%TYPE DEFAULT NULL,
		ONT_OID	IN SG_TERM.ONT_OID%TYPE DEFAULT NULL,
		ONT_NAME	IN SG_ONTOLOGY.NAME%TYPE DEFAULT NULL,
		Trm_IDENTIFIER	IN SG_TERM.IDENTIFIER%TYPE DEFAULT NULL,
		Subj_Ent_IDENTIFIER	IN SG_BIOENTRY.IDENTIFIER%TYPE DEFAULT NULL,
		Subj_Ent_ACCESSION	IN SG_BIOENTRY.ACCESSION%TYPE DEFAULT NULL,
		Subj_DB_OID	IN SG_BIOENTRY.DB_OID%TYPE DEFAULT NULL,
		Subj_Ent_VERSION	IN SG_BIOENTRY.VERSION%TYPE DEFAULT NULL,
		Obj_Ent_IDENTIFIER	IN SG_BIOENTRY.IDENTIFIER%TYPE DEFAULT NULL,
		Obj_Ent_ACCESSION	IN SG_BIOENTRY.ACCESSION%TYPE DEFAULT NULL,
		Obj_DB_OID	IN SG_BIOENTRY.DB_OID%TYPE DEFAULT NULL,
		Obj_Ent_VERSION	IN SG_BIOENTRY.VERSION%TYPE DEFAULT NULL,
		do_DML		IN NUMBER DEFAULT BSStd.DML_NO)
	RETURN SG_BIOENTRY_ASSOC.OID%TYPE;

	FUNCTION do_insert(
		TRM_OID	IN SG_BIOENTRY_ASSOC.TRM_OID%TYPE,
		OBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.OBJ_ENT_OID%TYPE,
		SUBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.SUBJ_ENT_OID%TYPE,
		RANK	IN SG_BIOENTRY_ASSOC.RANK%TYPE)
	RETURN SG_BIOENTRY_ASSOC.OID%TYPE;

	PROCEDURE do_update(
		EntA_OID	IN SG_BIOENTRY_ASSOC.OID%TYPE,
		EntA_TRM_OID	IN SG_BIOENTRY_ASSOC.TRM_OID%TYPE,
		EntA_OBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.OBJ_ENT_OID%TYPE,
		EntA_SUBJ_ENT_OID	IN SG_BIOENTRY_ASSOC.SUBJ_ENT_OID%TYPE,
		EntA_RANK	IN SG_BIOENTRY_ASSOC.RANK%TYPE);

	FUNCTION Platonic_Ent(Ent_Oid IN SG_Bioentry.Oid%TYPE)
	RETURN SG_Bioentry.Oid%TYPE;

	FUNCTION Ent_Descendants(
			Ent_Oid		IN SG_Bioentry.Oid%TYPE,
		 	Trm_Oid		IN SG_Term.Oid%TYPE DEFAULT NULL,
			Trm_Name	IN SG_Term.Name%TYPE DEFAULT NULL,
			Trm_Identifier IN SG_Term.Identifier%TYPE DEFAULT NULL,
			Ont_Oid		IN SG_Ontology.Oid%TYPE DEFAULT NULL,
			Ont_Name	IN SG_Ontology.Name%TYPE DEFAULT NULL)
	RETURN Oid_List_t;

END EntA;
/

